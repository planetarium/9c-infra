apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Chart.Name }}-snapshot-script
  namespace: {{ $.Chart.Name }}
data:
  download_snapshot.sh: |-
    #!/usr/bin/env bash
    cd /data

    apk update
    apk add curl jq wget sudo zip

    base_url=${1:-https://snapshots.nine-chronicles.com/internal}
    save_dir=${2:-"9c-main-snapshot_$(date +%Y%m%d_%H)"}
    download_option=$3
    service_name=$4
    slack_token=$5

    if [ $download_option = y ]
    then
      echo "Start download snapshot"
      if [ $service_name != "snapshot" ]
      then
        curl --data "[K8S] Start snapshot download in $service_name. Please wait." "https://planetariumhq.slack.com/services/hooks/slackbot?token=$slack_token&channel=%23bot-test"
      fi
      # strip tailing slash
      base_url=${base_url%/}

      function get_snapshot_value() {
          snapshot_json_url="$1"
          snapshot_param="$2"

          snapshot_param_return_value=$(curl --silent "$snapshot_json_url" | jq ".$snapshot_param")
          echo "$snapshot_param_return_value"
      }

      function download_unzip_partial_snapshot() {
        snapshot_json_filename="latest.json"
        mainnet_snapshot_json_filename="mainnet_latest.json"
        snapshot_zip_filename="state_latest.zip"
        snapshot_zip_filename_array=("$snapshot_zip_filename")

        while :
        do
            snapshot_json_url="$base_url/$snapshot_json_filename"

            BlockEpoch=$(get_snapshot_value "$snapshot_json_url" "BlockEpoch")
            TxEpoch=$(get_snapshot_value "$snapshot_json_url" "TxEpoch")
            PreviousBlockEpoch=$(get_snapshot_value "$snapshot_json_url" "PreviousBlockEpoch")
            PreviousTxEpoch=$(get_snapshot_value "$snapshot_json_url" "PreviousTxEpoch")

            snapshot_zip_filename="snapshot-$BlockEpoch-$TxEpoch.zip"
            snapshot_zip_filename_array+=("$snapshot_zip_filename")

            if [ "$PreviousBlockEpoch" -lt $1 ]
            then
                break
            fi

            snapshot_json_filename="snapshot-$PreviousBlockEpoch-$PreviousTxEpoch.json"
        done

        if [[ ! -d "$save_dir" ]]
        then
            echo "[Info] The directory $save_dir does not exist and is created."
            mkdir -p "$save_dir"
        fi

        for ((i=${#snapshot_zip_filename_array[@]}-1; i>=0; i--))
        do
            snapshot_zip_filename="${snapshot_zip_filename_array[$i]}"
            rm "$snapshot_zip_filename" 2>/dev/null

            snapshot_zip_url="$base_url/$snapshot_zip_filename"
            echo "$snapshot_zip_url"

            wget -q "$snapshot_zip_url"
            echo "Unzipping $snapshot_zip_filename"
            unzip -o "$snapshot_zip_filename" -d "$save_dir"
            rm "$snapshot_zip_filename"
        done

        wget -q "$base_url/$mainnet_snapshot_json_filename" -O "$save_dir/$mainnet_snapshot_json_filename"
      }

      function download_unzip_full_snapshot() {
          snapshot_json_filename="latest.json"
          mainnet_snapshot_json_filename="mainnet_latest.json"
          snapshot_zip_filename="state_latest.zip"
          snapshot_zip_filename_array=("$snapshot_zip_filename")

          while :
          do
              snapshot_json_url="$base_url/$snapshot_json_filename"
              echo "$snapshot_json_url"

              BlockEpoch=$(get_snapshot_value "$snapshot_json_url" "BlockEpoch")
              TxEpoch=$(get_snapshot_value "$snapshot_json_url" "TxEpoch")
              PreviousBlockEpoch=$(get_snapshot_value "$snapshot_json_url" "PreviousBlockEpoch")
              PreviousTxEpoch=$(get_snapshot_value "$snapshot_json_url" "PreviousTxEpoch")

              snapshot_zip_filename="snapshot-$BlockEpoch-$TxEpoch.zip"
              snapshot_zip_filename_array+=("$snapshot_zip_filename")

              if [ "$PreviousBlockEpoch" -eq 0 ]
              then
                  break
              fi

              snapshot_json_filename="snapshot-$PreviousBlockEpoch-$PreviousTxEpoch.json"
          done

          if [[ ! -d "$save_dir" ]]
          then
              echo "[Info] The directory $save_dir does not exist and is created."
              mkdir -p "$save_dir"
          fi

          for ((i=${#snapshot_zip_filename_array[@]}-1; i>=0; i--))
          do
              snapshot_zip_filename="${snapshot_zip_filename_array[$i]}"
              rm "$snapshot_zip_filename" 2>/dev/null

              snapshot_zip_url="$base_url/$snapshot_zip_filename"
              echo "$snapshot_zip_url"

              wget -q "$snapshot_zip_url"
              echo "Unzipping $snapshot_zip_filename"
              unzip -o "$snapshot_zip_filename" -d "$save_dir"
              rm "$snapshot_zip_filename"
          done

          wget -q "$base_url/$mainnet_snapshot_json_filename" -O "$save_dir/$mainnet_snapshot_json_filename"
      }

      if [ -f $save_dir/mainnet_latest.json ]
      then
        local_previous_mainnet_blockEpoch=$(cat "$save_dir/mainnet_latest.json" | jq ".BlockEpoch")
        download_unzip_partial_snapshot $local_previous_mainnet_blockEpoch
      else
        download_unzip_full_snapshot
      fi

      # The return value for the program that calls this script
      echo "$save_dir"
      if [ $service_name != "snapshot" ]
      then
        curl --data "[K8S] Snapshot download complete in $service_name. Pod Starting." "https://planetariumhq.slack.com/services/hooks/slackbot?token=$slack_token&channel=%23bot-test"
      fi
    else
      echo "Skip download snapshot"
      if [ $service_name != "snapshot" ]
      then
        curl --data "[K8S] Skip snapshot download in $service_name. Pod Starting." "https://planetariumhq.slack.com/services/hooks/slackbot?token=$slack_token&channel=%23bot-test"
      fi
    fi
