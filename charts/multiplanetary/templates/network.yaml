{{ range $.Values.multiplanetary }}
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: {{ .name }}
  namespace: argocd
spec:
  project: default
  source:
    repoURL: https://github.com/planetarium/9c-infra.git
    targetRevision: main
    path: charts/all-in-one
    helm:
      values: |-
        clusterName: {{ $.Values.clusterName }}
        logLevel: {{ $.Values.logLevel }}

        global:
          image:
            {{- toYaml (default $.Values.global.image .image) | nindent 12 }}
          appProtocolVersion: {{ default $.Values.global.appProtocolVersion .appProtocolVersion }}
          genesisBlockPath: {{ default $.Values.global.genesisBlockPath .genesisBlockPath }}
          trustedAppProtocolVersionSigner: {{ default $.Values.global.trustedAppProtocolVersionSigner .trustedAppProtocolVersionSigner }}
          peerStrings:
            {{- toYaml (default $.Values.global.peerStrings .peerStrings) | nindent 12 }}
          iceServers:
            {{- toYaml (default $.Values.global.iceServers .iceServers) | nindent 12 }}
          networkType: {{ default $.Values.global.networkType .networkType }}
          consensusType: {{ default $.Values.global.consensusType .consensusType }}
          resetSnapshot: {{ default $.Values.global.resetSnapshot .resetSnapshot }}
          slackToken: {{ default $.Values.global.slackToken .slackToken }}
          slackWebHookUrl: {{ default $.Values.global.slackWebHookUrl .slackWebHookUrl }}

        externalSecret:
          enabled: {{ default $.Values.externalSecret.enabled .externalSecret.enabled }}
          prefix: "{{ $.Values.clusterName }}/{{ .name }}"

        snapshot:
          downloadSnapshot: {{ default $.Values.snapshot.downloadSnapshot .snapshot.downloadSnapshot }}
          fullSnapshot:
            {{- toYaml (default $.Values.snapshot.fullSnapshot .snapshot.fullSnapshot) | nindent 12 }}
          partitionReset:
            {{- toYaml (default $.Values.snapshot.partitionReset .snapshot.partitionReset) | nindent 12 }}
          partition:
            {{- toYaml (default $.Values.snapshot.partition .snapshot.partition) | nindent 12 }}
          slackChannel: {{ default $.Values.snapshot.slackChannel .snapshot.slackChannel }}
          image:
            {{- toYaml (default $.Values.snapshot.image .snapshot.image) | nindent 12 }}
          cfDistributionId: "{{ default $.Values.snapshot.cfDistributionId .snapshot.cfDistributionId }}"
          aws_access_key_id: "{{ default $.Values.snapshot.aws_access_key_id .snapshot.aws_access_key_id }}"
          aws_secret_access_key: "{{ default $.Values.snapshot.aws_secret_access_key .snapshot.aws_secret_access_key }}"
          path: "{{ default $.Values.snapshot.path .snapshot.path }}"

          resources:
            {{- toYaml (default $.Values.snapshot.resources .snapshot.resources) | nindent 12 }}

          nodeSelector:
            {{- toYaml (default $.Values.snapshot.nodeSelector .snapshot.nodeSelector) | nindent 12 }}

        volumeReclaimPolicy: {{ default $.Values.volumeReclaimPolicy .volumeReclaimPolicy }}

        seed:
          count: {{ default $.Values.seed.count .seed.count }}
          useTurnServer: {{ default $.Values.seed.useTurnServer .seed.useTurnServer }}
          image:
            {{- toYaml (default $.Values.seed.image .seed.image) | nindent 12 }}
          hosts:
            {{- toYaml (default $.Values.seed.hosts .seed.hosts) | nindent 12 }}
          ports:
            {{- toYaml (default $.Values.seed.ports .seed.ports) | nindent 12 }}
          workerCount: {{ default $.Values.seed.workerCount .seed.workerCount }}
          extraArgs:
            {{- toYaml (default $.Values.seed.extraArgs .seed.extraArgs) | nindent 12 }}
          privateKeys: 
            {{- toYaml (default $.Values.seed.privateKeys .seed.privateKeys) | nindent 12 }}
          env:
            {{- toYaml (default $.Values.seed.env .seed.env) | nindent 12 }}
          resources:
            {{- toYaml (default $.Values.seed.resources .seed.resources) | nindent 12 }}
          nodeSelector:
            {{- toYaml (default $.Values.seed.nodeSelector .seed.nodeSelector) | nindent 12 }}
          tolerations:
            {{- toYaml (default $.Values.seed.tolerations .seed.tolerations) | nindent 12 }}
          affinity:
            {{- toYaml (default $.Values.seed.affinity .seed.affinity) | nindent 12 }}

        validator:
          count: {{ default $.Values.validator.count .validator.count }}
          image:
            {{- toYaml (default $.Values.validator.image .validator.image) | nindent 12 }}
          consensusSeedStrings:
            {{- toYaml (default $.Values.validator.consensusSeedStrings .validator.consensusSeedStrings) | nindent 12 }}
          hosts:
            {{- toYaml (default $.Values.validator.hosts .validator.hosts) | nindent 12 }}
          ports:
            {{- toYaml (default $.Values.validator.ports .validator.ports) | nindent 12 }}
          extraArgs:
            {{- toYaml (default $.Values.validator.extraArgs .validator.extraArgs) | nindent 12 }}
          privateKeys:
            {{- toYaml (default $.Values.validator.privateKeys .validator.privateKeys) | nindent 12 }}
          storage:
            data: {{ default "1000Gi" .validator.storage.data }}
          env:
            {{- toYaml (default $.Values.validator.env .validator.env) | nindent 12 }}
          resources:
            {{- toYaml (default $.Values.validator.resources .validator.resources) | nindent 12 }}
          loggingEnabled: {{ default $.Values.validator.loggingEnabled .validator.loggingEnabled }}
          nodeSelector:
            {{- toYaml (default $.Values.validator.nodeSelector .validator.nodeSelector) | nindent 12 }}
          tolerations:
            {{- toYaml (default $.Values.validator.tolerations .validator.tolerations) | nindent 12 }}
          affinity:
            {{- toYaml (default $.Values.validator.affinity .validator.affinity) | nindent 12 }}

        remoteHeadless:
          count: {{ default $.Values.remoteHeadless.count .remoteHeadless.count }}
          image:
            {{- toYaml (default $.Values.remoteHeadless.image .remoteHeadless.image) | nindent 12 }}
          hosts:
            {{- toYaml (default $.Values.remoteHeadless.hosts .remoteHeadless.hosts) | nindent 12 }}
          ports:
            {{- toYaml (default $.Values.remoteHeadless.ports .remoteHeadless.ports) | nindent 12 }}
          storage:
            data: {{ default "500Gi" .remoteHeadless.storage.data }}
          resources:
            {{- toYaml (default $.Values.remoteHeadless.resources .remoteHeadless.resources) | nindent 12 }}
          nodeSelector:
            {{- toYaml (default $.Values.remoteHeadless.nodeSelector .remoteHeadless.nodeSelector) | nindent 12 }}

        dataProvider:
          {{- toYaml (default $.Values.dataProvider .dataProvider) | nindent 10 }}

        worldBoss:
          {{- toYaml (default $.Values.worldBoss .worldBoss) | nindent 10 }}

        marketService:
          {{- toYaml (default $.Values.marketService .marketService) | nindent 10 }}

        patrolRewardService:
          {{- toYaml (default $.Values.patrolRewardService .patrolRewardService) | nindent 10 }}

        rudolfService:
          {{- toYaml (default $.Values.rudolfService .rudolfService) | nindent 10 }}

  destination:
    server: https://kubernetes.default.svc
    namespace: {{ .name }}
---
{{ end }}
