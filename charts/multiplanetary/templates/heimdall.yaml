{{ if .Values.heimdall.enabled }}
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: heimdall
  namespace: argocd
spec:
  project: default
  source:
    repoURL: https://github.com/planetarium/9c-infra.git
    targetRevision: main
    path: charts/all-in-one
    helm:
      values: |-
        clusterName: {{ .Values.clusterName }}
        logLevel: {{ .Values.logLevel }}

        global:
          image:
            {{- toYaml (default $.Values.global.image $.Values.heimdall.image) | nindent 12 }}
          appProtocolVersion: {{ default .Values.global.appProtocolVersion .Values.heimdall.appProtocolVersion }}
          genesisBlockPath: {{ default .Values.global.genesisBlockPath .Values.heimdall.genesisBlockPath }}
          trustedAppProtocolVersionSigner: {{ default .Values.global.trustedAppProtocolVersionSigner .Values.heimdall.trustedAppProtocolVersionSigner }}
          peerStrings:
            {{- toYaml (default $.Values.global.peerStrings $.Values.heimdall.peerStrings) | nindent 12 }}
          iceServers:
            {{- toYaml (default $.Values.global.iceServers $.Values.heimdall.iceServers) | nindent 12 }}
          networkType: {{ default .Values.global.networkType .Values.heimdall.networkType }}
          consensusType: {{ default .Values.global.consensusType .Values.heimdall.consensusType }}
          resetSnapshot: {{ default .Values.global.resetSnapshot .Values.heimdall.resetSnapshot }}
          slackToken: {{ default .Values.global.slackToken .Values.heimdall.slackToken }}
          slackWebHookUrl: {{ default .Values.global.slackWebHookUrl .Values.heimdall.slackWebHookUrl }}

        externalSecret:
          enabled: {{ default .Values.externalSecret.enabled .Values.heimdall.externalSecret.enabled }}
          prefix: "{{ .Values.heimdall.clusterName }}/heimdall"

        snapshot:
          downloadSnapshot: {{ default .Values.snapshot.downloadSnapshot .Values.heimdall.snapshot.downloadSnapshot }}
          fullSnapshot:
            {{- toYaml (default $.Values.snapshot.fullSnapshot $.Values.heimdall.snapshot.fullSnapshot) | nindent 12 }}
          partitionReset:
            {{- toYaml (default $.Values.snapshot.partitionReset $.Values.heimdall.snapshot.partitionReset) | nindent 12 }}
          partition:
            {{- toYaml (default $.Values.snapshot.partition $.Values.heimdall.snapshot.partition) | nindent 12 }}
          slackChannel: {{ default .Values.snapshot.slackChannel .Values.heimdall.snapshot.slackChannel }}
          image:
            {{- toYaml (default $.Values.snapshot.image $.Values.heimdall.snapshot.image) | nindent 12 }}
          cfDistributionId: "{{ default $.Values.snapshot.cfDistributionId .Values.heimdall.snapshot.cfDistributionId }}"
          aws_access_key_id: "{{ default $.Values.snapshot.aws_access_key_id .Values.heimdall.snapshot.aws_access_key_id }}"
          aws_secret_access_key: "{{ default $.Values.snapshot.aws_secret_access_key .Values.heimdall.snapshot.aws_secret_access_key }}"
          path: "{{ .Values.clusterName }}/heimdall"
          resources:
            {{- toYaml (default $.Values.snapshot.resources $.Values.heimdall.snapshot.resources) | nindent 12 }}
          nodeSelector:
            {{- toYaml (default $.Values.snapshot.nodeSelector $.Values.heimdall.snapshot.nodeSelector) | nindent 12 }}

        volumeReclaimPolicy: {{ default .Values.volumeReclaimPolicy .Values.heimdall.volumeReclaimPolicy }}

        seed:
          count: {{ default .Values.seed.count .Values.heimdall.seed.count }}
          useTurnServer: {{ default .Values.seed.useTurnServer .Values.heimdall.seed.useTurnServer }}
          image:
            {{- toYaml (default .Values.seed.image .Values.heimdall.seed.image) | nindent 12 }}
          hosts:
            {{- toYaml (default .Values.seed.hosts .Values.heimdall.seed.hosts) | nindent 12 }}
          ports:
            {{- toYaml (default .Values.seed.ports .Values.heimdall.seed.ports) | nindent 12 }}
          workerCount: {{ default .Values.seed.workerCount .Values.heimdall.seed.workerCount }}
          extraArgs:
            {{- toYaml (default .Values.seed.extraArgs .Values.heimdall.seed.extraArgs) | nindent 12 }}
          privateKeys: 
            {{- toYaml (default .Values.seed.privateKeys .Values.heimdall.seed.privateKeys) | nindent 12 }}
          env:
            {{- toYaml (default .Values.seed.env .Values.heimdall.seed.env) | nindent 12 }}
          resources:
            {{- toYaml (default .Values.seed.resources .Values.heimdall.seed.resources) | nindent 12 }}
          nodeSelector:
            {{- toYaml (default .Values.seed.nodeSelector .Values.heimdall.seed.nodeSelector) | nindent 12 }}
          tolerations:
            {{- toYaml (default .Values.seed.tolerations .Values.heimdall.seed.tolerations) | nindent 12 }}
          affinity:
            {{- toYaml (default .Values.seed.affinity .Values.heimdall.seed.affinity) | nindent 12 }}

        validator:
          count: {{ default .Values.validator.count .Values.heimdall.validator.count }}
          image:
            {{- toYaml (default .Values.validator.image .Values.heimdall.validator.image) | nindent 12 }}
          consensusSeedStrings:
            {{- toYaml (default .Values.validator.consensusSeedStrings .Values.heimdall.validator.consensusSeedStrings) | nindent 12 }}
          hosts:
            {{- toYaml (default .Values.validator.hosts .Values.heimdall.validator.hosts) | nindent 12 }}
          ports:
            {{- toYaml (default .Values.validator.ports .Values.heimdall.validator.ports) | nindent 12 }}
          extraArgs:
            {{- toYaml (default .Values.validator.extraArgs .Values.heimdall.validator.extraArgs) | nindent 12 }}
          privateKeys:
            {{- toYaml (default .Values.validator.privateKeys .Values.heimdall.validator.privateKeys) | nindent 12 }}
          storage:
            data: {{ default "1000Gi" .Values.heimdall.validator.storage.data }}
          env:
            {{- toYaml (default .Values.validator.env .Values.heimdall.validator.env) | nindent 12 }}
          resources:
            {{- toYaml (default .Values.validator.resources .Values.heimdall.validator.resources) | nindent 12 }}
          loggingEnabled: {{ default .Values.validator.loggingEnabled .Values.heimdall.validator.loggingEnabled }}
          nodeSelector:
            {{- toYaml (default .Values.validator.nodeSelector .Values.heimdall.validator.nodeSelector) | nindent 12 }}
          tolerations:
            {{- toYaml (default .Values.validator.tolerations .Values.heimdall.validator.tolerations) | nindent 12 }}
          affinity:
            {{- toYaml (default .Values.validator.affinity .Values.heimdall.validator.affinity) | nindent 12 }}

        remoteHeadless:
          count: {{ default .Values.remoteHeadless.count .Values.heimdall.remoteHeadless.count }}
          image:
            {{- toYaml (default .Values.remoteHeadless.image .Values.heimdall.remoteHeadless.image) | nindent 12 }}
          hosts:
            {{- toYaml (default .Values.remoteHeadless.hosts .Values.heimdall.remoteHeadless.hosts) | nindent 12 }}
          ports:
            {{- toYaml (default .Values.remoteHeadless.ports .Values.heimdall.remoteHeadless.ports) | nindent 12 }}
          storage:
            data: {{ default "500Gi" .Values.heimdall.remoteHeadless.storage.data }}
          resources:
            {{- toYaml (default .Values.remoteHeadless.resources .Values.heimdall.remoteHeadless.resources) | nindent 12 }}
          nodeSelector:
            {{- toYaml (default .Values.remoteHeadless.nodeSelector .Values.heimdall.remoteHeadless.nodeSelector) | nindent 12 }}

        dataProvider:
          {{- toYaml (default .Values.dataProvider .Values.heimdall.dataProvider) | nindent 10 }}

        worldBoss:
          {{- toYaml (default .Values.worldBoss .Values.heimdall.worldBoss) | nindent 10 }}

        patrolRewardService:
          {{- toYaml (default .Values.patrolRewardService .Values.heimdall.patrolRewardService) | nindent 10 }}

        rudolfService:
          {{- toYaml (default .Values.rudolfService .Values.heimdall.rudolfService) | nindent 10 }}

  destination:
    server: https://kubernetes.default.svc
    namespace: heimdall
{{ end }}
