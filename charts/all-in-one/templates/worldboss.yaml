{{ if .Values.worldBoss.enabled }}
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::319679068466:role/9c-onboarding-eks
  labels:
    app.kubernetes.io/instance: {{ $.Release.Name }}
  name: {{ $.Release.Name }}-onboarding-iam-role
  namespace: {{ $.Release.Name }}

---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: world-boss-service
    app.kubernetes.io/instance: {{ $.Release.Name }}
  name: world-boss-service
  namespace: {{ $.Release.Name }}
spec:
  podManagementPolicy: OrderedReady
  replicas: 1
  selector:
    matchLabels:
      app: world-boss-service
  serviceName: world-boss-service
  template:
    metadata:
      labels:
        app: world-boss-service
    spec:
      containers:
        - args:
            - flask --app world_boss/wsgi.py db upgrade --directory world_boss/migrations && gunicorn world_boss.wsgi:app --workers 8 --timeout 600 --bind 0.0.0.0:5000
          command:
            - /bin/sh
            - -c
          env:
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  key: database-url
                  name: world-boss-env
            - name: REDIS_HOST
              valueFrom:
                secretKeyRef:
                  key: redis-host
                  name: world-boss-env
            - name: REDIS_PORT
              valueFrom:
                secretKeyRef:
                  key: redis-port
                  name: world-boss-env
            - name: KMS_KEY_ID
              valueFrom:
                secretKeyRef:
                  key: kms-key-id
                  name: world-boss-env
            - name: SLACK_TOKEN
              valueFrom:
                secretKeyRef:
                  key: slack-token
                  name: world-boss-env
            - name: CELERY_BROKER_URL
              valueFrom:
                secretKeyRef:
                  key: celery-broker-url
                  name: world-boss-env
            - name: CELERY_RESULT_BACKEND
              valueFrom:
                secretKeyRef:
                  key: celery-result-backend
                  name: world-boss-env
            - name: SLACK_SIGNING_SECRET
              valueFrom:
                secretKeyRef:
                  key: slack-signing-secret
                  name: world-boss-env
            - name: SENTRY_DSN
              valueFrom:
                secretKeyRef:
                  key: sentry-dsn
                  name: world-boss-env
          image: {{ $.Values.worldBoss.image.repository }}:{{ $.Values.worldBoss.image.tag }}
          name: world-boss-service
          ports:
            - containerPort: 5000
      {{- with $.Values.worldBoss.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      restartPolicy: Always
      serviceAccount: {{ $.Release.Name }}-onboarding-iam-role
      serviceAccountName: {{ $.Release.Name }}-onboarding-iam-role
  updateStrategy:
    type: RollingUpdate

---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: world-boss-worker
    app.kubernetes.io/instance: {{ $.Release.Name }}
  name: world-boss-worker
  namespace: {{ $.Release.Name }}
spec:
  podManagementPolicy: OrderedReady
  replicas: 1
  selector:
    matchLabels:
      app: world-boss-worker
  serviceName: world-boss-worker
  template:
    metadata:
      labels:
        app: world-boss-worker
    spec:
      containers:
        - args:
            - celery -A world_boss.wsgi:cel worker -l DEBUG
          command:
            - /bin/sh
            - -c
          env:
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  key: database-url
                  name: world-boss-env
            - name: REDIS_HOST
              valueFrom:
                secretKeyRef:
                  key: redis-host
                  name: world-boss-env
            - name: REDIS_PORT
              valueFrom:
                secretKeyRef:
                  key: redis-port
                  name: world-boss-env
            - name: KMS_KEY_ID
              valueFrom:
                secretKeyRef:
                  key: kms-key-id
                  name: world-boss-env
            - name: SLACK_TOKEN
              valueFrom:
                secretKeyRef:
                  key: slack-token
                  name: world-boss-env
            - name: CELERY_BROKER_URL
              valueFrom:
                secretKeyRef:
                  key: celery-broker-url
                  name: world-boss-env
            - name: CELERY_RESULT_BACKEND
              valueFrom:
                secretKeyRef:
                  key: celery-result-backend
                  name: world-boss-env
            - name: SLACK_SIGNING_SECRET
              valueFrom:
                secretKeyRef:
                  key: slack-signing-secret
                  name: world-boss-env
            - name: SENTRY_DSN
              valueFrom:
                secretKeyRef:
                  key: sentry-dsn
                  name: world-boss-env
          image: {{ $.Values.worldBoss.image.repository }}:{{ $.Values.worldBoss.image.tag }}
          name: world-boss-worker
          ports:
            - containerPort: 5000
      {{- with $.Values.worldBoss.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      restartPolicy: Always
      serviceAccount: {{ $.Release.Name }}-onboarding-iam-role
      serviceAccountName: {{ $.Release.Name }}-onboarding-iam-role
  updateStrategy:
    type: RollingUpdate
{{ end }}
