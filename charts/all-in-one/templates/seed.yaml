{{ range $idx := until (int .Values.seed.count) }}
{{ $index := add $idx 1 }}
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: tcp-seed-{{ $index }}
    app.kubernetes.io/instance: {{ $.Release.Name }}
  name: tcp-seed-{{ $index }}
  namespace: {{ $.Release.Name }}
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: tcp-seed-{{ $index }}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: tcp-seed-{{ $index }}
      name: tcp-seed-{{ $index }}
    spec:
      containers:
      - args:
        - Libplanet.Seed.Executable.dll
        - run
        - --log-level={{ $.Values.logLevel }}
        - --app-protocol-version={{ $.Values.global.appProtocolVersion }}
        {{- if $.Values.seed.useTurnServer }}
        - --ice-server={{ index $.Values.global.iceServers $idx }}
        {{- else }}
        - --host={{ index $.Values.seed.hosts $idx }}
        {{- end }}
        - --port={{ $.Values.seed.ports.node }}
        - --private-key=$(PRIVATE_KEY)
        - --graphql-host=0.0.0.0
        - --graphql-port={{ $.Values.seed.ports.graphql }}
        - --workers={{ $.Values.seed.workerCount }}
        {{- if eq $.Values.global.consensusType "pbft" }}
        - --gossip-port={{ $.Values.seed.ports.gossip }}
        {{- end }}
        {{- with $.Values.seed.extraArgs }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
        command:
        - dotnet
        env:
          - name: PRIVATE_KEY
            valueFrom:
              secretKeyRef:
                key: seed-private-key-{{ $index }}
                name: private-keys
        {{- with $.Values.seed.env }}
          {{- toYaml . | nindent 12 }}
        {{- end }}
        image: "{{ $.Values.seed.image.repository }}:{{ $.Values.seed.image.tag | default $.Release.AppVersion }}"
        imagePullPolicy: Always
        livenessProbe:
          initialDelaySeconds: 120
          periodSeconds: 5
          successThreshold: 1
          tcpSocket:
            port: {{ $.Values.seed.ports.node }}
          timeoutSeconds: 1
        name: tcp-seed-{{ $index }}
        ports:
          - containerPort: {{ $.Values.seed.ports.node }}
            name: node
            protocol: TCP
          - containerPort: {{ $.Values.seed.ports.graphql }}
            name: graphql
            protocol: TCP
          - containerPort: {{ $.Values.seed.ports.gossip }}
            name: gossip
            protocol: TCP
        resources:
          {{- toYaml $.Values.seed.resources | nindent 10 }}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      {{- with $.Values.seed.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
      securityContext:
        {{- toYaml $.Values.seed.podSecurityContext | nindent 8 }}
      {{- with $.Values.seed.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $.Values.seed.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
---
{{ end }}
