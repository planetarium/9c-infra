{{ if .Values.bridgeService.enabled }}
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    eks.amazonaws.com/role-arn: {{ .Values.bridgeService.serviceAccount.roleArn }}
  labels:
    app.kubernetes.io/instance: {{ $.Release.Name }}
  name: {{ $.Release.Name }}-bridge-service
  namespace: {{ $.Release.Name }}

---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: bridge-service
    app.kubernetes.io/instance: {{ $.Release.Name }}
  name: bridge-service
  namespace: {{ $.Release.Name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: bridge-service
  serviceName: bridge-service
  template:
    metadata:
      labels:
        app: bridge-service
    spec:
      initContainers:
      - args:
        - prisma
        - migrate
        - deploy
        command:
        - /usr/local/bin/npx
        image: {{ $.Values.bridgeService.image.repository }}:{{ $.Values.bridgeService.image.tag }}
        name: run-prisma-migrate-deploy
        env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: bridge-env
              key: DATABASE_URL
      containers:
        - env:
          - name: NC_REGISTRY_ENDPOINT
            value: {{ $.Values.bridgeService.multiplanetary.registryEndpoint }}
          - name: NC_UPSTREAM_PLANET
            value: {{ quote $.Values.bridgeService.multiplanetary.upstream }}
          - name: NC_DOWNSTREAM_PLANET
            value: {{ quote $.Values.bridgeService.multiplanetary.downstream }}
          - name: SLACK__BOT_TOKEN
            valueFrom:
              secretKeyRef:
                key: SLACK__BOT_TOKEN
                name: bridge-env
          - name: SLACK__BOT_USERNAME
            value: {{ $.Values.bridgeService.notification.slack.bot.username }}
          - name: SLACK__CHANNEL
            value: {{ $.Values.bridgeService.notification.slack.channel }}
          - name: NC_UPSTREAM_NCG_MINTER
            value: '0x47D082a115c63E7b58B1532d20E631538eaFADde'
          {{- if eq $.Values.bridgeService.account.type "raw" }}
          - name: NC_UPSTREAM_ACCOUNT_TYPE
            value: "RAW"
          - name: NC_UPSTREAM_PRIVATE_KEY
            valueFrom:
              secretKeyRef:
                key: NC_UPSTREAM_PRIVATE_KEY
                name: bridge-env
          - name: NC_DOWNSTREAM_ACCOUNT_TYPE
            value: "RAW"
          - name: NC_DOWNSTREAM_PRIVATE_KEY
            valueFrom:
              secretKeyRef:
                key: NC_DOWNSTREAM_PRIVATE_KEY
                name: bridge-env
          {{- else if eq $.Values.bridgeService.account.type "kms" }}
          - name: NC_UPSTREAM_ACCOUNT_TYPE
            value: "KMS"
          - name: NC_UPSTREAM__KMS__KEY_ID
            value: {{ $.Values.bridgeService.account.keyId }}
          - name: NC_UPSTREAM__KMS__PUBLIC_KEY
            value: {{ $.Values.bridgeService.account.publicKey }}
          - name: NC_DOWNSTREAM_ACCOUNT_TYPE
            value: "KMS"
          - name: NC_DOWNSTREAM__KMS__KEY_ID
            value: {{ $.Values.bridgeService.account.keyId }}
          - name: NC_DOWNSTREAM__KMS__PUBLIC_KEY
            value: {{ $.Values.bridgeService.account.publicKey }}
          {{- else }}
          {{- fail "bridgeService.account.type must be either raw or kms" }}
          {{- end }}
          {{- if eq $.Values.bridgeService.txpool.type "headless" }}
          - name: NC_UPSTREAM__TXPOOL__TYPE
            value: "HEADLESS"
          - name: NC_DOWNSTREAM__TXPOOL__TYPE
            value: "HEADLESS"
          {{- else if eq $.Values.bridgeService.txpool.type "local" }}
          - name: NC_UPSTREAM__TXPOOL__TYPE
            value: "LOCAL"
          - name: NC_DOWNSTREAM__TXPOOL__TYPE
            value: "LOCAL"
          - name: NC_UPSTREAM__LOCAL_TXPOOL__PATH
            value: {{ .Values.bridgeService.txpool.upstream.path }}
          - name: NC_DOWNSTREAM__LOCAL_TXPOOL__PATH
            value: {{ .Values.bridgeService.txpool.downstream.path }}
          {{- else }}
          {{- fail "bridgeService.txpool.type must be either headless or local" }}
          {{- end }}
          {{- if .Values.bridgeService.rdb.enabled }}
          - name: USE_RDB
            value: "true"
          - name: DATABASE_URL
            valueFrom:
              secretKeyRef:
                key: DATABASE_URL
                name: bridge-env
          - name: NC_UPSTREAM__RDB__START_BLOCK_INDEX
            value: {{ quote .Values.bridgeService.rdb.defaultStartBlockIndex.upstream }}
          - name: NC_DOWNSTREAM__RDB__START_BLOCK_INDEX
            value: {{ quote .Values.bridgeService.rdb.defaultStartBlockIndex.downstream }}
          {{- end }}
          - name: MONITOR_STATE_STORE_PATH
            valueFrom:
              secretKeyRef:
                key: MONITOR_STATE_STORE_PATH
                name: bridge-env
          - name: NC_VAULT_ADDRESS
            valueFrom:
              secretKeyRef:
                key: NC_VAULT_ADDRESS
                name: bridge-env
          - name: NC_VAULT_AVATAR_ADDRESS
            valueFrom:
              secretKeyRef:
                key: NC_VAULT_AVATAR_ADDRESS
                name: bridge-env
          image: {{ $.Values.bridgeService.image.repository }}:{{ $.Values.bridgeService.image.tag }}
          name: bridge-service
          volumeMounts:
            - mountPath: /data
              name: bridge-service-data
      {{- with $.Values.bridgeService.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      terminationGracePeriodSeconds: 60
      restartPolicy: Always
      serviceAccount: {{ $.Release.Name }}-bridge-service
      serviceAccountName: {{ $.Release.Name }}-bridge-service
  updateStrategy:
    type: RollingUpdate      
  volumeClaimTemplates:
    - metadata:
        name: bridge-service-data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: {{ $.Values.bridgeService.storage.size }}
        {{- if eq $.Values.provider "RKE2" }}
        storageClassName: {{ $.Release.Name }}-longhorn
        {{- else }}
        storageClassName: {{ $.Release.Name }}-gp3
        {{- end }}
        volumeMode: Filesystem
---
{{ end }}
