{{ if $.Values.snapshot.fullSnapshot.enabled }}
apiVersion: batch/v1
kind: CronJob
metadata:
  name: snapshot-full
  namespace: {{ $.Release.Name }}
  labels:
    app.kubernetes.io/instance: {{ $.Release.Name }}
spec:
  failedJobsHistoryLimit: 1
  jobTemplate:
    spec:
      template:
        spec:
          initContainers:
          - name: preload-headless
            {{- if and $.Values.remoteHeadless.image.repository $.Values.remoteHeadless.image.tag }}
            image: {{ $.Values.remoteHeadless.image.repository }}:{{ $.Values.remoteHeadless.image.tag }}
            {{- else }}
            image: {{ $.Values.global.image.repository }}:{{ $.Values.global.image.tag }}
            {{- end }}
            args:
            - $(APP_PROTOCOL_VERSION_KEY)
            - $(SLACK_WEBHOOK_URL)
            command:
            - /bin/preload_headless.sh
            env:
            - name: APP_PROTOCOL_VERSION_KEY
              value: {{ $.Values.global.appProtocolVersion }}
            - name: SLACK_WEBHOOK_URL
              valueFrom:
                secretKeyRef:
                  name: slack
                  key: slack-webhook-url
            resources:
              requests:
                cpu: 1300m
                memory: 20Gi
            volumeMounts:
            - name: script-volume
              mountPath: /bin/preload_headless.sh
              readOnly: true
              subPath: preload_headless.sh
            - name: snapshot-volume-full
              mountPath: /data
          containers:
          - name: upload-snapshot
            image: {{ $.Values.snapshot.image }}
            args:
            - $(APP_PROTOCOL_VERSION_KEY)
            - $(SLACK_WEBHOOK_URL)
            - $(CF_DISTRIBUTION_ID)
            - $(SLACK_TOKEN)
            command:
            - /bin/upload_snapshot.sh
            env:
            - name: APP_PROTOCOL_VERSION_KEY
              value: {{ $.Values.global.appProtocolVersion }}
            - name: SLACK_WEBHOOK_URL
              valueFrom:
                secretKeyRef:
                  name: slack
                  key: slack-webhook-url
            - name: CF_DISTRIBUTION_ID
              valueFrom:
                secretKeyRef:
                  name: aws-keys
                  key: cf_distribution_id
            - name: SLACK_TOKEN
              valueFrom:
                secretKeyRef:
                  name: slack
                  key: slack-token
            {{- with $.Values.snapshot.resources }}
            resources:
              {{- toYaml . | nindent 14 }}
            {{- end }}
            volumeMounts:
            - name: script-volume
              mountPath: /bin/upload_snapshot.sh
              readOnly: true
              subPath: upload_snapshot.sh
            - name: snapshot-volume-full
              mountPath: /data
            - name: aws-keys
              mountPath: /secret
              readOnly: true
          restartPolicy: OnFailure
          {{- with $.Values.snapshot.nodeSelector }}
          nodeSelector:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumes:
          - name: script-volume
            configMap:
              defaultMode: 0700
              name: {{ .Release.Name }}-snapshot-script-full
          - name: download-snapshot-script
            configMap:
              defaultMode: 0700
              name: {{ $.Release.Name }}-download-snapshot-script
          - name: snapshot-volume-full
            persistentVolumeClaim:
              claimName: snapshot-volume-full
          - name: aws-keys
            secret:
              secretName: aws-keys
  schedule: 0 6 * * *
  successfulJobsHistoryLimit: 1
  failedJobsHistoryLimit: 1
  suspend: {{ $.Values.snapshot.fullSnapshot.suspend }}
{{ end }}
