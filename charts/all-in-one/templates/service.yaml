{{ range $idx := until (int .Values.seed.count) }}
{{ $index := add $idx 1 }}
apiVersion: v1
kind: Service
metadata:
  name: tcp-seed-{{ $index }}
  namespace: {{ $.Release.Name }}
  labels:
    app.kubernetes.io/instance: {{ $.Release.Name }}
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-scheme: internet-facing
    service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: "ip"
    service.beta.kubernetes.io/aws-load-balancer-ssl-cert: arn:aws:acm:us-east-2:319679068466:certificate/2481ac9e-2037-4331-9234-4b3f86d50ad3
    service.beta.kubernetes.io/aws-load-balancer-ssl-ports: "443"
    service.beta.kubernetes.io/aws-load-balancer-type: external
    service.beta.kubernetes.io/aws-load-balancer-target-group-attributes: stickiness.enabled=true,stickiness.type=source_ip,preserve_client_ip.enabled=true
    service.beta.kubernetes.io/aws-load-balancer-additional-resource-tags: Environment={{- if eq $.Values.clusterName "9c-main-v2" }}production{{- else }}development{{- end }},Team=game,Owner=jihyung,Service={{ $.Release.Name }},Name=tcp-seed-{{ $index }}
spec:
  externalTrafficPolicy: Local
  ports:
  - port: {{ $.Values.seed.ports.node }}
    targetPort: {{ $.Values.seed.ports.node }}
    name: node
  - port: {{ $.Values.seed.ports.graphql }}
    targetPort: {{ $.Values.seed.ports.graphql }}
    name: graphql
  {{- if ne $.Values.global.networkType "Main" }}
  - port: 443
    targetPort: {{ $.Values.seed.ports.graphql }}
    name: https
  {{- end }}
  - port: {{ $.Values.seed.ports.gossip }}
    targetPort: {{ $.Values.seed.ports.gossip }}
    name: gossip
  selector:
    app: tcp-seed-{{ $index }}
  type: LoadBalancer
---
{{ end }}

{{ range $idx := until (int .Values.remoteHeadless.count) }}
{{ $index := add $idx 1 }}

apiVersion: v1
kind: Service
metadata:
  name: remote-headless-{{ $index }}
  namespace: {{ $.Release.Name }}
  labels:
    app.kubernetes.io/instance: {{ $.Release.Name }}
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-scheme: internet-facing
    service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: "ip"
    service.beta.kubernetes.io/aws-load-balancer-ssl-cert: arn:aws:acm:us-east-2:319679068466:certificate/2481ac9e-2037-4331-9234-4b3f86d50ad3
    service.beta.kubernetes.io/aws-load-balancer-ssl-ports: "443"
    service.beta.kubernetes.io/aws-load-balancer-type: external
    service.beta.kubernetes.io/aws-load-balancer-target-group-attributes: stickiness.enabled=true,stickiness.type=source_ip,preserve_client_ip.enabled=true
    service.beta.kubernetes.io/aws-load-balancer-additional-resource-tags: Environment={{- if eq $.Values.clusterName "9c-main-v2" }}production{{- else }}development{{- end }},Team=game,Owner=jihyung,Service={{ $.Release.Name }},Name=remote-headless-{{ $index }}
spec:
  externalTrafficPolicy: Local
  ports:
  - name: graphql
    port: {{ $.Values.remoteHeadless.ports.graphql }}
    targetPort: {{ $.Values.remoteHeadless.ports.graphql }}
  - name: rpc
    port: {{ $.Values.remoteHeadless.ports.rpc }}
    targetPort: {{ $.Values.remoteHeadless.ports.rpc }}
  - name: headless
    port: {{ $.Values.remoteHeadless.ports.headless }}
    targetPort: {{ $.Values.remoteHeadless.ports.headless }}
  - name: https
    port: 443
    targetPort: {{ $.Values.remoteHeadless.ports.graphql }}
  selector:
    app: remote-headless-{{ $index }}
  type: LoadBalancer

---
{{ end }}

{{- if eq $.Values.clusterName "9c-main-v2" }}
apiVersion: v1
kind: Service
metadata:
  name: data-provider-write
  namespace: {{ $.Release.Name }}
  labels:
    app.kubernetes.io/instance: {{ $.Release.Name }}
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: ip
    service.beta.kubernetes.io/aws-load-balancer-scheme: internet-facing
    service.beta.kubernetes.io/aws-load-balancer-type: external
    service.beta.kubernetes.io/aws-load-balancer-additional-resource-tags: Environment={{- if eq $.Values.clusterName "9c-main-v2" }}production{{- else }}development{{- end }},Team=game,Owner=kidon,Service={{ $.Release.Name }},Name=data-provider-write
spec:
  ports:
  - name: graphql
    port: 80
    targetPort: 80
  selector:
    app: data-provider-write
  type: LoadBalancer

{{ else }}
---

apiVersion: v1
kind: Service
metadata:
  name: data-provider
  namespace: {{ $.Release.Name }}
  labels:
    app.kubernetes.io/instance: {{ $.Release.Name }}
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: ip
    service.beta.kubernetes.io/aws-load-balancer-scheme: internet-facing
    service.beta.kubernetes.io/aws-load-balancer-type: external
    service.beta.kubernetes.io/aws-load-balancer-additional-resource-tags: Environment={{- if eq $.Values.clusterName "9c-main-v2" }}production{{- else }}development{{- end }},Team=game,Owner=kidon,Service={{ $.Release.Name }},Name=data-provider
spec:
  ports:
  - name: graphql
    port: 80
    targetPort: 80
  selector:
    app: data-provider
  type: LoadBalancer
---
{{ end }}

{{ if $.Values.dataProvider.db.local }}
apiVersion: v1
kind: Service
metadata:
  name: data-provider-db
  namespace: {{ $.Release.Name }}
  labels:
    app.kubernetes.io/instance: {{ $.Release.Name }}
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: ip
    service.beta.kubernetes.io/aws-load-balancer-scheme: internet-facing
    service.beta.kubernetes.io/aws-load-balancer-type: external
    service.beta.kubernetes.io/aws-load-balancer-additional-resource-tags: Environment={{- if eq $.Values.clusterName "9c-main-v2" }}production{{- else }}development{{- end }},Team=game,Owner=kidon,Service={{ $.Release.Name }},Name=data-provider-db
spec:
  ports:
  - name: tcp
    port: 3306
    targetPort: 3306
  selector:
    app: data-provider-db
  type: LoadBalancer
---
{{ end }}

{{ if $.Values.explorer.enabled }}
apiVersion: v1
kind: Service
metadata:
  name: explorer
  namespace: {{ $.Release.Name }}
  labels:
    app.kubernetes.io/instance: {{ $.Release.Name }}
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-scheme: internet-facing
    service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: "ip"
    service.beta.kubernetes.io/aws-load-balancer-ssl-cert: arn:aws:acm:us-east-2:319679068466:certificate/2481ac9e-2037-4331-9234-4b3f86d50ad3
    service.beta.kubernetes.io/aws-load-balancer-ssl-ports: "443"
    service.beta.kubernetes.io/aws-load-balancer-type: external
    service.beta.kubernetes.io/aws-load-balancer-target-group-attributes: stickiness.enabled=true,stickiness.type=source_ip,preserve_client_ip.enabled=true
    service.beta.kubernetes.io/aws-load-balancer-additional-resource-tags: Environment={{- if eq $.Values.clusterName "9c-main-v2" }}production{{- else }}development{{- end }},Team=game,Owner=jihyung,Service={{ $.Release.Name }},Name=explorer
spec:
  externalTrafficPolicy: Local
  ports:
  - name: graphql
    port: {{ $.Values.explorer.ports.graphql }}
    targetPort: {{ $.Values.explorer.ports.graphql }}
  - name: headless
    port: {{ $.Values.explorer.ports.headless }}
    targetPort: {{ $.Values.explorer.ports.headless }}
  - name: https
    port: 443
    targetPort: {{ $.Values.explorer.ports.graphql }}
  selector:
    app: explorer
  type: LoadBalancer
{{ end }}
---

{{ if $.Values.fullState.enabled }}
apiVersion: v1
kind: Service
metadata:
  name: main-full-state
  namespace: {{ $.Release.Name }}
  labels:
    app.kubernetes.io/instance: {{ $.Release.Name }}
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-scheme: internet-facing
    service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: "ip"
    service.beta.kubernetes.io/aws-load-balancer-ssl-cert: arn:aws:acm:us-east-2:319679068466:certificate/2481ac9e-2037-4331-9234-4b3f86d50ad3
    service.beta.kubernetes.io/aws-load-balancer-ssl-ports: "443"
    service.beta.kubernetes.io/aws-load-balancer-type: external
    service.beta.kubernetes.io/aws-load-balancer-target-group-attributes: stickiness.enabled=true,stickiness.type=source_ip,preserve_client_ip.enabled=true
    service.beta.kubernetes.io/aws-load-balancer-additional-resource-tags: Environment={{- if eq $.Values.clusterName "9c-main-v2" }}production{{- else }}development{{- end }},Team=game,Owner=jihyung,Service={{ $.Release.Name }},Name=main-full-state
spec:
  externalTrafficPolicy: Local
  ports:
  - name: graphql
    port: {{ $.Values.fullState.ports.graphql }}
    targetPort: {{ $.Values.fullState.ports.graphql }}
  - name: headless
    port: {{ $.Values.fullState.ports.headless }}
    targetPort: {{ $.Values.fullState.ports.headless }}
  - name: rpc
    port: {{ $.Values.fullState.ports.rpc }}
    targetPort: {{ $.Values.fullState.ports.rpc }}
  - name: https
    port: 443
    targetPort: {{ $.Values.fullState.ports.graphql }}
  selector:
    app: main-full-state
  type: LoadBalancer

---
{{ end }}

{{ if .Values.testHeadless1.enabled }}

apiVersion: v1
kind: Service
metadata:
  name: test-headless-1
  namespace: {{ $.Release.Name }}
  labels:
    app.kubernetes.io/instance: {{ $.Release.Name }}
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-scheme: internet-facing
    service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: "ip"
    service.beta.kubernetes.io/aws-load-balancer-ssl-cert: arn:aws:acm:us-east-2:319679068466:certificate/2481ac9e-2037-4331-9234-4b3f86d50ad3
    service.beta.kubernetes.io/aws-load-balancer-ssl-ports: "443"
    service.beta.kubernetes.io/aws-load-balancer-type: external
    service.beta.kubernetes.io/aws-load-balancer-target-group-attributes: stickiness.enabled=true,stickiness.type=source_ip,preserve_client_ip.enabled=true
    service.beta.kubernetes.io/aws-load-balancer-additional-resource-tags: Environment={{- if eq $.Values.clusterName "9c-main-v2" }}production{{- else }}development{{- end }},Team=game,Owner=jihyung,Service={{ $.Release.Name }},Name=test-headless-1
spec:
  externalTrafficPolicy: Local
  ports:
  - name: graphql
    port: {{ $.Values.testHeadless1.ports.graphql }}
    targetPort: {{ $.Values.testHeadless1.ports.graphql }}
  - name: rpc
    port: {{ $.Values.testHeadless1.ports.rpc }}
    targetPort: {{ $.Values.testHeadless1.ports.rpc }}
  - name: headless
    port: {{ $.Values.testHeadless1.ports.headless }}
    targetPort: {{ $.Values.testHeadless1.ports.headless }}
  - name: https
    port: 443
    targetPort: {{ $.Values.testHeadless1.ports.graphql }}
  selector:
    app: test-headless-1
  type: LoadBalancer

---
{{ end }}

{{ if .Values.testHeadless2.enabled }}

apiVersion: v1
kind: Service
metadata:
  name: test-headless-2
  namespace: {{ $.Release.Name }}
  labels:
    app.kubernetes.io/instance: {{ $.Release.Name }}
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-scheme: internet-facing
    service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: "ip"
    service.beta.kubernetes.io/aws-load-balancer-ssl-cert: arn:aws:acm:us-east-2:319679068466:certificate/2481ac9e-2037-4331-9234-4b3f86d50ad3
    service.beta.kubernetes.io/aws-load-balancer-ssl-ports: "443"
    service.beta.kubernetes.io/aws-load-balancer-type: external
    service.beta.kubernetes.io/aws-load-balancer-target-group-attributes: stickiness.enabled=true,stickiness.type=source_ip,preserve_client_ip.enabled=true
    service.beta.kubernetes.io/aws-load-balancer-additional-resource-tags: Environment={{- if eq $.Values.clusterName "9c-main-v2" }}production{{- else }}development{{- end }},Team=game,Owner=jihyung,Service={{ $.Release.Name }},Name=test-headless-2
spec:
  externalTrafficPolicy: Local
  ports:
  - name: graphql
    port: {{ $.Values.testHeadless2.ports.graphql }}
    targetPort: {{ $.Values.testHeadless2.ports.graphql }}
  - name: rpc
    port: {{ $.Values.testHeadless2.ports.rpc }}
    targetPort: {{ $.Values.testHeadless2.ports.rpc }}
  - name: headless
    port: {{ $.Values.testHeadless2.ports.headless }}
    targetPort: {{ $.Values.testHeadless2.ports.headless }}
  - name: https
    port: 443
    targetPort: {{ $.Values.testHeadless2.ports.graphql }}
  selector:
    app: test-headless-2
  type: LoadBalancer

---
{{ end }}

{{ if .Values.worldBoss.enabled }}
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: {{ $.Release.Name }}
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: http
    service.beta.kubernetes.io/aws-load-balancer-scheme: internet-facing
    service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: "ip"
    service.beta.kubernetes.io/aws-load-balancer-type: "external"
    service.beta.kubernetes.io/aws-load-balancer-ssl-cert: arn:aws:acm:us-east-2:319679068466:certificate/4312c1a7-51c4-4442-8ae4-c8f3f2bce4f0
    service.beta.kubernetes.io/aws-load-balancer-ssl-ports: https
    service.beta.kubernetes.io/aws-load-balancer-additional-resource-tags: Environment={{- if eq $.Values.clusterName "9c-main-v2" }}production{{- else }}development{{- end }},Team=game,Owner=jihyung,Service={{ $.Release.Name }},Name=world-boss-service
  name: world-boss-service
  namespace: {{ $.Release.Name }}
spec:
  externalTrafficPolicy: Cluster
  internalTrafficPolicy: Cluster
  ipFamilies:
  - IPv4
  ipFamilyPolicy: SingleStack
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: {{ $.Values.worldBoss.ports.targetPort }}
  - name: https
    port: 443
    protocol: TCP
    targetPort: {{ $.Values.worldBoss.ports.targetPort }}
  selector:
    app: world-boss-service
  type: LoadBalancer

---
{{ end }}

{{- if $.Values.worldBoss.db.local }}

apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: {{ $.Release.Name }}
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: http
    service.beta.kubernetes.io/aws-load-balancer-ssl-cert: arn:aws:acm:us-east-2:319679068466:certificate/4312c1a7-51c4-4442-8ae4-c8f3f2bce4f0
    service.beta.kubernetes.io/aws-load-balancer-ssl-ports: https
  name: world-boss-db
  namespace: {{ $.Release.Name }}
spec:
  internalTrafficPolicy: Cluster
  ipFamilies:
    - IPv4
  ipFamilyPolicy: SingleStack
  ports:
    - name: postgres
      port: 5432
      protocol: TCP
      targetPort: 5432
  selector:
    app: world-boss-db
  type: ClusterIP

---

apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: {{ $.Release.Name }}
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: http
    service.beta.kubernetes.io/aws-load-balancer-ssl-cert: arn:aws:acm:us-east-2:319679068466:certificate/4312c1a7-51c4-4442-8ae4-c8f3f2bce4f0
    service.beta.kubernetes.io/aws-load-balancer-ssl-ports: https
  name: world-boss-redis
  namespace: {{ $.Release.Name }}
spec:
  internalTrafficPolicy: Cluster
  ipFamilies:
    - IPv4
  ipFamilyPolicy: SingleStack
  ports:
    - name: redis
      port: 6379
      protocol: TCP
      targetPort: 6379
  selector:
    app: world-boss-redis
  type: ClusterIP
---
{{- end }}

{{ if .Values.testWorldBoss.enabled }}
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: {{ $.Release.Name }}
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: http
    service.beta.kubernetes.io/aws-load-balancer-scheme: internet-facing
    service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: "ip"
    service.beta.kubernetes.io/aws-load-balancer-type: "external"
    service.beta.kubernetes.io/aws-load-balancer-ssl-cert: arn:aws:acm:us-east-2:319679068466:certificate/4312c1a7-51c4-4442-8ae4-c8f3f2bce4f0
    service.beta.kubernetes.io/aws-load-balancer-ssl-ports: https
    service.beta.kubernetes.io/aws-load-balancer-additional-resource-tags: Environment={{- if eq $.Values.clusterName "9c-main-v2" }}production{{- else }}development{{- end }},Team=game,Owner=jihyung,Service={{ $.Release.Name }},Name=test-world-boss-service
  name: test-world-boss-service
  namespace: {{ $.Release.Name }}
spec:
  externalTrafficPolicy: Cluster
  internalTrafficPolicy: Cluster
  ipFamilies:
    - IPv4
  ipFamilyPolicy: SingleStack
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: {{ $.Values.testWorldBoss.ports.targetPort }}
    - name: https
      port: 443
      protocol: TCP
      targetPort: {{ $.Values.testWorldBoss.ports.targetPort }}
  selector:
    app: test-world-boss-service
  type: LoadBalancer

---
{{ end }}

{{ if .Values.marketService.enabled }}
apiVersion: v1
kind: Service
metadata:
  name: market-service
  namespace: {{ $.Release.Name }}
  labels:
    app.kubernetes.io/instance: {{ $.Release.Name }}
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-scheme: internet-facing
    service.beta.kubernetes.io/aws-load-balancer-type: "external"
    service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: "ip"
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: http
    service.beta.kubernetes.io/aws-load-balancer-ssl-cert: arn:aws:acm:us-east-2:319679068466:certificate/4312c1a7-51c4-4442-8ae4-c8f3f2bce4f0
    service.beta.kubernetes.io/aws-load-balancer-ssl-ports: https
    service.beta.kubernetes.io/aws-load-balancer-additional-resource-tags: Environment={{- if eq $.Values.clusterName "9c-main-v2" }}production{{- else }}development{{- end }},Team=game,Owner=jihyung,Service={{ $.Release.Name }},Name=market-service
spec:
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 80
    - name: https
      port: 443
      protocol: TCP
      targetPort: 80
  selector:
    app: market-service
  type: LoadBalancer

---
{{ end }}

{{ if .Values.marketService.db.local }}
apiVersion: v1
kind: Service
metadata:
  name: market-db
  namespace: {{ $.Release.Name }}
  labels:
    app.kubernetes.io/instance: {{ $.Release.Name }}
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-scheme: internet-facing
    service.beta.kubernetes.io/aws-load-balancer-type: "external"
    service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: "ip"
    service.beta.kubernetes.io/aws-load-balancer-additional-resource-tags: Environment={{- if eq $.Values.clusterName "9c-main-v2" }}production{{- else }}development{{- end }},Team=game,Owner=jihyung,Service={{ $.Release.Name }},Name=market-db
spec:
  ports:
    - name: "5432"
      port: 5432
      targetPort: 5432
  selector:
    app: market-db
  type: LoadBalancer
---
{{ end }}

{{ range $idx := until (int .Values.validator.count) }}
{{ $index := add $idx 5 }}
apiVersion: v1
kind: Service
metadata:
  name: validator-{{ $index }}
  namespace: {{ $.Release.Name }}
  labels:
    app.kubernetes.io/instance: {{ $.Release.Name }}
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-scheme: internet-facing
    service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: "ip"
    service.beta.kubernetes.io/aws-load-balancer-ssl-cert: arn:aws:acm:us-east-2:319679068466:certificate/2481ac9e-2037-4331-9234-4b3f86d50ad3
    service.beta.kubernetes.io/aws-load-balancer-ssl-ports: "443"
    service.beta.kubernetes.io/aws-load-balancer-type: external
    service.beta.kubernetes.io/aws-load-balancer-target-group-attributes: stickiness.enabled=true,stickiness.type=source_ip,preserve_client_ip.enabled=true
    service.beta.kubernetes.io/aws-load-balancer-additional-resource-tags: Environment={{- if eq $.Values.clusterName "9c-main-v2" }}production{{- else }}development{{- end }},Team=game,Owner=jihyung,Service={{ $.Release.Name }},Name=validator-{{ $index }}
spec:
  externalTrafficPolicy: Local
  ports:
  - port: {{ $.Values.validator.ports.headless }}
    targetPort: {{ $.Values.validator.ports.headless }}
    name: headless
  - port: {{ $.Values.validator.ports.graphql }}
    targetPort: {{ $.Values.validator.ports.graphql }}
    name: gql
  - port: {{ $.Values.validator.ports.gossip }}
    targetPort: {{ $.Values.validator.ports.gossip }}
    name: gossip
  - port: 443
    targetPort: {{ $.Values.validator.ports.graphql }}
    name: https
    protocol: TCP
  selector:
    app: validator-{{ $index }}
  type: LoadBalancer

---
{{ end }}

{{ if .Values.remoteActionEvaluatorHeadless.enabled }}

apiVersion: v1
kind: Service
metadata:
  name: remote-action-evaluator-headless
  namespace: {{ $.Release.Name }}
  labels:
    app.kubernetes.io/instance: {{ $.Release.Name }}
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-scheme: internet-facing
    service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: "ip"
    service.beta.kubernetes.io/aws-load-balancer-ssl-cert: arn:aws:acm:us-east-2:319679068466:certificate/2481ac9e-2037-4331-9234-4b3f86d50ad3
    service.beta.kubernetes.io/aws-load-balancer-ssl-ports: "443"
    service.beta.kubernetes.io/aws-load-balancer-type: external
    service.beta.kubernetes.io/aws-load-balancer-target-group-attributes: stickiness.enabled=true,stickiness.type=source_ip,preserve_client_ip.enabled=true
    service.beta.kubernetes.io/aws-load-balancer-additional-resource-tags: Environment={{- if eq $.Values.clusterName "9c-main-v2" }}production{{- else }}development{{- end }},Team=game,Owner=jihyung,Service={{ $.Release.Name }},Name=remote-action-evaluator-headless
spec:
  externalTrafficPolicy: Local
  ports:
  - name: graphql
    port: {{ $.Values.remoteActionEvaluatorHeadless.ports.graphql }}
    targetPort: {{ $.Values.remoteActionEvaluatorHeadless.ports.graphql }}
  - name: rpc
    port: {{ $.Values.remoteActionEvaluatorHeadless.ports.rpc }}
    targetPort: {{ $.Values.remoteActionEvaluatorHeadless.ports.rpc }}
  - name: headless
    port: {{ $.Values.remoteActionEvaluatorHeadless.ports.headless }}
    targetPort: {{ $.Values.remoteActionEvaluatorHeadless.ports.headless }}
  - name: https
    port: 443
    targetPort: {{ $.Values.remoteActionEvaluatorHeadless.ports.graphql }}
  selector:
    app: remote-action-evaluator-headless
  type: LoadBalancer

---
{{ end }}

{{ if .Values.lib9cStateService.enabled }}

apiVersion: v1
kind: Service
metadata:
  name: lib9c-state-service
  namespace: {{ $.Release.Name }}
  labels:
    app.kubernetes.io/instance: {{ $.Release.Name }}
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-scheme: internet-facing
    service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: "ip"
    service.beta.kubernetes.io/aws-load-balancer-ssl-cert: arn:aws:acm:us-east-2:319679068466:certificate/2481ac9e-2037-4331-9234-4b3f86d50ad3
    service.beta.kubernetes.io/aws-load-balancer-ssl-ports: "443"
    service.beta.kubernetes.io/aws-load-balancer-type: external
    service.beta.kubernetes.io/aws-load-balancer-target-group-attributes: stickiness.enabled=true,stickiness.type=source_ip,preserve_client_ip.enabled=true
    service.beta.kubernetes.io/aws-load-balancer-additional-resource-tags: Environment={{- if eq $.Values.clusterName "9c-main-v2" }}production{{- else }}development{{- end }},Team=game,Owner=jihyung,Service={{ $.Release.Name }},Name=lib9c-state-service
spec:
  ports:
  - name: http
    port: 5157
    targetPort: 5157
  selector:
    app: lib9c-state-service
  type: ClusterIP

---
{{ end }}

{{ if .Values.emptyChronicle.enabled }}

apiVersion: v1
kind: Service
metadata:
  name: empty-chronicle
  namespace: {{ $.Release.Name }}
  labels:
    app.kubernetes.io/instance: {{ $.Release.Name }}
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-scheme: internet-facing
    service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: "ip"
    service.beta.kubernetes.io/aws-load-balancer-ssl-cert: arn:aws:acm:us-east-2:319679068466:certificate/2481ac9e-2037-4331-9234-4b3f86d50ad3
    service.beta.kubernetes.io/aws-load-balancer-ssl-ports: "443"
    service.beta.kubernetes.io/aws-load-balancer-type: external
    service.beta.kubernetes.io/aws-load-balancer-target-group-attributes: stickiness.enabled=true,stickiness.type=source_ip,preserve_client_ip.enabled=true
    service.beta.kubernetes.io/aws-load-balancer-additional-resource-tags: Environment={{- if eq $.Values.clusterName "9c-main-v2" }}production{{- else }}development{{- end }},Team=game,Owner=jihyung,Service={{ $.Release.Name }},Name=empty-chronicle
spec:
  externalTrafficPolicy: Local
  ports:
  - name: http
    port: 80
    targetPort: {{ $.Values.emptyChronicle.ports.port }}
  - name: https
    port: 443
    targetPort: {{ $.Values.emptyChronicle.ports.port }}
  selector:
    app: empty-chronicle
  type: LoadBalancer

---
{{ end }}

{{ if .Values.patrolRewardService.enabled }}
apiVersion: v1
kind: Service
metadata:
  name: patrol-reward-service
  namespace: {{ $.Release.Name }}
  labels:
    app.kubernetes.io/instance: {{ $.Release.Name }}
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-scheme: internet-facing
    service.beta.kubernetes.io/aws-load-balancer-type: "external"
    service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: "ip"
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: http
    service.beta.kubernetes.io/aws-load-balancer-ssl-cert: arn:aws:acm:us-east-2:319679068466:certificate/4312c1a7-51c4-4442-8ae4-c8f3f2bce4f0
    service.beta.kubernetes.io/aws-load-balancer-ssl-ports: https
    service.beta.kubernetes.io/aws-load-balancer-additional-resource-tags: Environment={{- if eq $.Values.clusterName "9c-main-v2" }}production{{- else }}development{{- end }},Team=game,Owner=jihyung,Service={{ $.Release.Name }},Name=patrol-reward-service
spec:
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 80
    - name: https
      port: 443
      protocol: TCP
      targetPort: 80
  selector:
    app: patrol-reward-service
  type: LoadBalancer

---
{{ end }}

{{ if .Values.patrolRewardService.db.local }}
apiVersion: v1
kind: Service
metadata:
  name: patrol-reward-db
  namespace: {{ $.Release.Name }}
  labels:
    app.kubernetes.io/instance: {{ $.Release.Name }}
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-scheme: internet-facing
    service.beta.kubernetes.io/aws-load-balancer-type: "external"
    service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: "ip"
    service.beta.kubernetes.io/aws-load-balancer-additional-resource-tags: Environment={{- if eq $.Values.clusterName "9c-main-v2" }}production{{- else }}development{{- end }},Team=game,Owner=jihyung,Service={{ $.Release.Name }},Name=patrol-reward-db
spec:
  ports:
    - name: "5432"
      port: 5432
      targetPort: 5432
  selector:
    app: patrol-reward-db
  type: LoadBalancer
---
{{ end }}

{{ if .Values.acc.redis.enabled }}
apiVersion: v1
kind: Service
metadata:
  name: acc-redis-service
  namespace: {{ $.Release.Name }}
  labels:
    app.kubernetes.io/instance: {{ $.Release.Name }}
spec:
  type: ClusterIP
  ports:
  - port: 6379
    targetPort: 6379
    name: acc-redis
  selector:
    app: acc-redis
---
{{ end }}

{{ if .Values.acc.enabled }}
apiVersion: v1
kind: Service
metadata:
  name: acc-service
  namespace: {{ $.Release.Name }}
  labels:
    app.kubernetes.io/instance: {{ $.Release.Name }}
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 80
    name: acc
  selector:
    app: acc
---
{{ end }}

{{ if .Values.rudolfService.db.local }}
apiVersion: v1
kind: Service
metadata:
  name: rudolf-db
  namespace: {{ $.Release.Name }}
  labels:
    app.kubernetes.io/instance: {{ $.Release.Name }}
spec:
  ports:
    - name: "5432"
      port: 5432
      targetPort: 5432
  selector:
    app: rudolf-db
  type: ClusterIP
{{ end }}
