{{ if .Values.arenaService.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: arena-service
    app.kubernetes.io/instance: {{ $.Release.Name }}
  name: arena-service
  namespace: {{ $.Release.Name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: arena-service
  template:
    metadata:
      labels:
        app: arena-service
    spec:
      containers:
        - name: arena-service
          image: {{ $.Values.arenaService.image.repository }}:{{ $.Values.arenaService.image.tag }}
          ports:
            - containerPort: 8080
          env:
            - name: ConnectionStrings__DefaultConnection
              valueFrom:
                secretKeyRef:
                  name: arena
                  key: POSTGRES_CONNECTION_STRING
            - name: Redis__Host
              value: "{{ .Values.arenaService.redis.host }}"
            - name: Redis__Port
              value: "{{ .Values.arenaService.redis.port }}"
            - name: Redis__HangfireDbNumber
              value: "{{ .Values.arenaService.redis.hangfireDbNumber }}"
            - name: Redis__RankingDbNumber
              value: "{{ .Values.arenaService.redis.rankingDbNumber }}"
            - name: Redis__Password
              valueFrom:
                secretKeyRef:
                  name: arena
                  key: REDIS_PASSWORD
            - name: Headless__HeadlessEndpoint
              value: {{ .Values.arenaService.graphqlEndpoint }}
            - name: OpsConfig__RecipientAddress
              value: {{ .Values.arenaService.recipientAddress }}
            - name: OpsConfig__ArenaProviderName
              value: "PLANETARIUM"
          {{- with $.Values.arenaService.env }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
      restartPolicy: Always
      {{- with $.Values.arenaService.nodeSelector.read }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  strategy:
    type: RollingUpdate
{{ end }}
